@startuml Sequencia Lectura ActiveRecord
    title "Secuencia Lectura Registro ActiveRecord"
    hide footbox
    participant "Sistema" as sis 
    participant "registro: ActiveRecord" as reg
    participant "conexion: SqlConnection" as con
    participant "comando: SqlCommand" as cmd
    participant "adaptador: SqlAdapter" as adp
    participant "dt: DataTable" as dt
    participant "ActiveRecord" as class
    database "DataBase" as db
    


' Agregar el parÃ¡metro
'comando.Parameters.AddWithValue("@Parametro", valorDelParametro)

' Crear un objeto DataAdapter para ejecutar la consulta y llenar un DataTable
'Dim adaptador As New SqlDataAdapter(comando)
'Dim dataTable As New DataTable()

' Ejecutar la consulta y llenar el DataTable
'adaptador.Fill(dataTable)



    activate sis
    create reg
    sis -> reg++: new()
    sis <-- reg--
    sis -> reg++: id = Id_elemento_a_Recuperar
    sis <-- reg--
    sis -> reg++: Leer()
    create con
    reg -> con++: new(cadenaConexion)
    reg <-- con--
    reg -> con++: createCommand()
    create cmd
    con -> cmd++: new()
    con <-- cmd--
    reg <-- con--: comando
    reg -> cmd++: CommandText = CadenaSQLSelect 
    reg <-- cmd--
    reg -> cmd++: Parameters.AddWithValue("@id", registro.id)
    reg <-- cmd--
    create adp
    reg -> adp++: new(comando)
    reg <-- adp--
    create dt
    reg -> dt++: new()
    reg <-- dt--
    reg -> adp++: Fill(dt)
    adp -> db++
    adp <-- db-- 
    reg <-- adp--

    alt dt.Rows.Count > 0
        reg -> class++: ConfigurarObjeto(registro, dt.Rows(0))
        reg <-- class--
        sis <-- reg: True
    else Registro NO Encontrado
        sis <-- reg--: False
    end
    
@enduml